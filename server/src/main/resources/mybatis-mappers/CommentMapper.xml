<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movefeng.hexoblogadmin.dao.CommentDao">

    <!--插入评论-->
    <insert id="insertComment" parameterType="com.movefeng.hexoblogadmin.model.Comment">
        insert into comment (content,
                             create_time,
                             user_id,
                             article_id,
                             parent_id,
                             reply_user_id)
        values (#{content},
                #{createTime},
                #{userId},
                #{articleId},
                #{parentId},
                #{replyUserId})
    </insert>
    <!--审核多条评论-->
    <update id="auditBatch">
        update comment
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="audit_status=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.audit}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>
    <!--批量删除评论-->
    <delete id="deleteBatchById">
        delete from comment where id in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
    <!--根据user_id批量删除评论-->
    <delete id="deleteBatchByUserId">
        delete from comment where user_id in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
    <!--根据文章标题查询所有审核通过的父级评论-->
    <select id="selectCommentByArticleTitle" resultMap="comments">
        select comment.id as commentId,
               content,
               create_time,
               name,
               user.id    as userId,
               parent_id
        from comment,
             user
        where article_id = (select id from article where title = #{articleTitle})
          and reply_user_id = 0
          and comment.user_id = user.id
          and comment.audit_status = ${@com.movefeng.hexoblogadmin.model.Comment$AuditStatus@AUDIT_SUCCESS}
        order by create_time desc, commentId desc
    </select>
    <!--查询某个评论下的所有审核通过的子评论-->
    <select id="selectChildComment" resultType="com.movefeng.hexoblogadmin.vo.CommentVO">
        select a.*, name as replyUserName
        from (
                 select comment.id as id,
                        content,
                        create_time,
                        name       as username,
                        user.id    as userId,
                        parent_id,
                        reply_user_id
                 from comment,
                      user
                 where article_id = (select id from article where title = #{articleTitle})
                   and parent_id = #{parentId}
                   and comment.user_id = user.id
                   and comment.audit_status = ${@com.movefeng.hexoblogadmin.model.Comment$AuditStatus@AUDIT_SUCCESS}
             ) a,
             user
        where a.reply_user_id = user.id
        order by a.create_time desc, a.id desc
    </select>
    <!--查询某个评论下的所有审核通过的子评论数-->
    <select id="selectChildCommentCount" resultType="int">
        select count(*)
        from comment,
             user
        where article_id = (select id from article where title = #{articleTitle})
          and parent_id = #{parentId}
          and comment.user_id = user.id
          and comment.audit_status = ${@com.movefeng.hexoblogadmin.model.Comment$AuditStatus@AUDIT_SUCCESS}
    </select>
    <!--查询某篇文章的审核通过的评论数-->
    <select id="selectCommentCount" resultType="java.lang.Integer">
        select count(*)
        from comment
        where article_id = (select id from article where title = #{articleTitle})
          and audit_status = ${@com.movefeng.hexoblogadmin.model.Comment$AuditStatus@AUDIT_SUCCESS}
    </select>
    <!--查询所有文章的评论,带模糊查询-->
    <select id="selectAllComments" resultType="com.movefeng.hexoblogadmin.vo.CommentVO"
            parameterType="map">
        select a.*, user.name as replyUserName
        from (
        select comment.id as id,
        article.title as articleTitle,
        content,
        comment.create_time,
        name as username,
        user.id as userId,
        parent_id,
        reply_user_id as replyUserId,
        audit_status
        from comment,
        user,
        article
        where comment.user_id = user.id
        and article.id = comment.article_id
        <if test="param.searchTitle != null and param.searchTitle != ''">
            and article.title like concat('%',#{param.searchTitle},'%')
        </if>
        <if test="param.searchComment != null and param.searchComment != ''">
            and comment.content like concat('%', #{param.searchComment},'%')
        </if>
        <if test="param.searchDatetimeStart != null and param.searchDatetimeStart != ''">
            and comment.create_time &gt; #{param.searchDatetimeStart}
        </if>
        <if test="param.searchDatetimeEnd != null and param.searchDatetimeEnd != ''">
            and comment.create_time &lt; #{param.searchDatetimeEnd}
        </if>
        <if test="param.searchUsername != null and param.searchUsername != ''">
            and user.name like concat('%', #{param.searchUsername}, '%')
        </if>
        ) a
        left join user
        on replyUserId = user.id
        order by a.create_time desc,a.id desc
    </select>

    <resultMap id="comments" type="com.movefeng.hexoblogadmin.vo.CommentVOs">
        <association property="comment" javaType="com.movefeng.hexoblogadmin.vo.CommentVO">
            <id column="commentId" property="id"/>
            <result column="content" property="content"/>
            <result column="create_time" property="createTime"/>
            <result column="name" property="username"/>
            <result column="userId" property="userId"/>
            <result column="parent_id" property="parentId"/>
        </association>
    </resultMap>

</mapper>